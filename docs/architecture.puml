@startuml Tastyworks Tax Calculator Architecture

!define COMPONENT_COLOR #lightblue
!define EVENT_COLOR #lightgreen
!define DOMAIN_COLOR #lightyellow
!define EXTERNAL_COLOR #lightgray

skinparam component {
    BackgroundColor COMPONENT_COLOR
    BorderColor black
}

title Tastyworks Tax Calculator - Architecture Overview

package "Entry Point" {
    [ApplicationRunner] as runner
    note right of runner
        Coordinates the main flow:
        1. Reads CSV files
        2. Publishes events
        3. Prints reports
    end note
}

package "Transaction Processing" {
    [TransactionCsvReader] as csvReader
    note right of csvReader
        Parses Tastyworks CSV files:
        - Option trades (STO/BTC)
        - Option removals (expiration/assignment)
        - Stock trades (BTO/STC)
        - Reverse splits
    end note
}

package "Portfolio Management" {
    [Portfolio] as portfolio
    [OptionShortPosition] as optionPos
    [StockPosition] as stockPos

    note right of portfolio
        Event-driven position tracking:
        - FIFO queue for option positions
        - FIFO queue for stock positions
        - Handles partial closes
        - Publishes position events
    end note
}

package "Fiscal Year Management" {
    [FiscalYearManager] as fiscalMgr
    [FiscalYear] as fiscalYear
    [FiscalYearRepository] as fiscalRepo

    note right of fiscalMgr
        Manages tax calculations
        across fiscal years
    end note

    note right of fiscalYear
        Calculates P&L per year:
        - Separate option profits/losses
        - Stock profits
        - German tax rules
    end note
}

package "Currency Conversion" {
    [CurrencyExchange] as exchange
    [ExchangeRateRepository] as rateRepo

    note right of rateRepo
        Loads ECB historical
        EUR/USD rates from CSV
    end note
}

() "NewTransaction\nEvent" as newTxEvent
() "Position\nEvents" as positionEvents

database "Transaction CSVs" as txCsv
database "Exchange Rates CSV" as rateCsv

' Main flow connections
runner --> csvReader : reads transactions
csvReader --> txCsv : parses
runner --> newTxEvent : publishes

' Event publishing and listening
newTxEvent --> portfolio : @EventListener
portfolio --> optionPos : manages
portfolio --> stockPos : manages
portfolio --> positionEvents : publishes

' Fiscal year event handling
positionEvents --> fiscalMgr : @EventListener
fiscalMgr --> fiscalRepo : gets FiscalYear
fiscalMgr --> fiscalYear : delegates to

' Currency conversion
fiscalYear --> exchange : converts USD->EUR
exchange --> rateRepo : gets daily rate
rateRepo --> rateCsv : loads at startup

' Report generation
runner --> fiscalMgr : printReports()
fiscalMgr --> fiscalRepo : getAllSortedByYear()


@enduml
